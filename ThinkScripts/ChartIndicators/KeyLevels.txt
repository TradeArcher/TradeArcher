#Key Levels Chart Indicator
#Author: TradeArcher2020
#Version: 0.2
#Date Created: 10/18/2020

def currentAggPrd = GetAggregationPeriod();
def isIntraDay = currentAggPrd < AggregationPeriod.DAY;
#AddLabel(!isIntraDay, "!Intraday");

AddVerticalLine(isIntraDay and SecondsFromTime(1030) == 0 and SecondsTillTime(1030) == 0, text = "Begin Zombie Hours", color = Color.WHITE, stroke = Curve.FIRM);
Alert(isIntraDay and SecondsFromTime(1030) == 0 and SecondsTillTime(1030) == 0, "ZOMBIE HOURS", sound = Sound.Chimes);

AddVerticalLine(isIntraDay and SecondsFromTime(1500) == 0 and SecondsTillTime(1500) == 0, text = "Begin Reversal Hour", color = Color.WHITE, stroke = Curve.FIRM);
Alert(isIntraDay and SecondsFromTime(isIntraDay and 1500) == 0 and SecondsTillTime(1500) == 0, "REVERSAL HOUR", sound = Sound.Chimes);

DefineGlobalColor("ZombieHours", Color.LIGHT_GRAY);
plot upper = if(isIntraDay and SecondsFromTime(1030) >= 0 and SecondsTillTime(1500) >= 0, Double.POSITIVE_INFINITY, Double.NaN);
plot lower = if(isIntraDay and SecondsFromTime(1030) >= 0 and SecondsTillTime(1500) >= 0, Double.NEGATIVE_INFINITY, Double.NaN);
AddCloud(upper, lower, color1 = GlobalColor("ZombieHours"), color2 = GlobalColor("ZombieHours"));

#AddVerticalLine(SecondsFromTime(1600) == 0 and SecondsTillTime(1600) == 0, text = "End Reversal Hour", color = Color.WHITE, stroke = Curve.FIRM);
#End Time Specific Lines

def dayMinAggPrd = if(currentAggPrd > AggregationPeriod.DAY, currentAggPrd, AggregationPeriod.DAY);
#Begin Previous Day's Close
plot previousDaysClose = close(period=dayMinAggPrd)[1];
previousDaysClose.SetDefaultColor(color = Color.LIGHT_GRAY);
previousDaysClose.SetStyle(Curve.LONG_DASH);
previousDaysClose.setHiding(!isIntraDay);
#End Previous Day's Close

#Begin Previous Day's Open
plot previousDaysOpen = open(period=dayMinAggPrd)[1];
previousDaysOpen.SetDefaultColor(color = Color.LIGHT_GRAY);
previousDaysOpen.SetStyle(Curve.LONG_DASH);
previousDaysOpen.setHiding(!isIntraDay);
#End Previous Day's Close

#Begin Previous Day's High
plot previousDaysHigh = high(period=dayMinAggPrd)[1];
previousDaysHigh.SetDefaultColor(color = Color.LIGHT_GRAY);
previousDaysHigh.SetStyle(Curve.LONG_DASH);
previousDaysHigh.setHiding(!isIntraDay);
#End Previous Day's Close

#Begin Previous Day's Low
plot previousDaysLow = low(period=dayMinAggPrd)[1];
previousDaysLow.SetDefaultColor(color = Color.LIGHT_GRAY);
previousDaysLow.SetStyle(Curve.LONG_DASH);
previousDaysLow.setHiding(!isIntraDay);
#End Previous Day's Close

#Begin Today's Open
def todaysOpen = open(period = dayMinAggPrd);
plot dailyOpen = todaysOpen;
dailyOpen.AssignValueColor(if close < dailyOpen then Color.DOWNTICK else Color.UPTICK);
dailyOpen.SetStyle(Curve.LONG_DASH);
dailyOpen.setHiding(!isIntraDay);
#End Today's Open

#Begin Today's Close
def beforeStart = GetTime() < RegularTradingStart(GetYYYYMMDD());
def afterEnd = GetTime() > RegularTradingEnd(GetYYYYMMDD());
#def lastSessionEndTime = RegularTradingEnd(GetYYYYMMDD());
#def minutesSinceClose = SecondsFromTime(0400) / 60;

def isAfterHours = isIntraDay and !beforeStart and afterEnd;
#def isPreMarket = beforeStart and !afterEnd;
def isMarketHours = isIntraDay and !beforeStart and !afterEnd;

plot todaysClose = if isMarketHours then close(period = dayMinAggPrd, priceType = PriceType.LAST) else if isAfterHours then close(period = dayMinAggPrd, priceType = PriceType.LAST)[0] else close(period = dayMinAggPrd, priceType = PriceType.LAST)[1];
todaysClose.SetDefaultColor(color = Color.LIGHT_GRAY);
todaysClose.SetStyle(Curve.SHORT_DASH);
todaysClose.setHiding(!isIntraDay);
#End Today's Close

#Begin Pre-Market High
def h = high;
def bar = BarNumber();
def isOutsideTradingHours = GetTime() < RegularTradingStart(GetYYYYMMDD());
def overNightHigh = if isOutsideTradingHours and !isOutsideTradingHours[1] then h else if isOutsideTradingHours and h > overNightHigh[1] then h else overNightHigh[1];
def overNightHighBar = if isOutsideTradingHours and h == overNightHigh then bar else Double.NaN;
def overNightHighest = if BarNumber() == HighestAll(overNightHighBar) then overNightHigh else overNightHighest[1];

plot overNightHighestLine = if(!isIntraDay, Double.NaN, overNightHighest);
overNightHighestLine.SetDefaultColor(color = Color.LIGHT_GRAY);
overNightHighestLine.SetStyle(Curve.SHORT_DASH);
overNightHighestLine.setHiding(!isIntraDay);
#End Pre-MarketForecast High

#Begin Pre-Market Low
def l = low;
def overNightLow = if isOutsideTradingHours and !isOutsideTradingHours[1] then l else if isOutsideTradingHours and l < overNightLow[1] then l else overNightLow[1];
def overNightLowBar = if isOutsideTradingHours and l == overNightLow then bar else Double.NaN;
def overNightLowest = if BarNumber() == HighestAll(overNightLowBar) then overNightLow else overNightLowest[1];

plot overNightLowestLine = if(!isIntraDay, Double.NaN, overNightLowest);
overNightLowestLine.SetDefaultColor(color = Color.LIGHT_GRAY);
overNightLowestLine.SetStyle(Curve.SHORT_DASH);
overNightLowestLine.setHiding(!isIntraDay);
#End Pre-MarketForecast Low

#Begin After-Market High
#End After-Market High

#Begin High Of Day
plot highOfDay = if(!isIntraDay, high, high(period = dayMinAggPrd));
highOfDay.SetDefaultColor(color = Color.LIGHT_GRAY);
highOfDay.SetStyle(Curve.SHORT_DASH);
highOfDay.setHiding(!isIntraDay);
#End High of Day

#Begin Low Of Day
plot lowOfDay = if(!isIntraDay, low, low(period = dayMinAggPrd));
lowOfDay.SetDefaultColor(color = Color.LIGHT_GRAY);
lowOfDay.SetStyle(Curve.SHORT_DASH);
lowOfDay.setHiding(!isIntraDay);
#End High of Day

#Begin Year High
plot yearlyHigh = if(!isIntraDay, Double.NaN, Highest(high(period = dayMinAggPrd), length = 365));
yearlyHigh.SetDefaultColor(color = Color.LIGHT_GRAY);
yearlyHigh.SetStyle(Curve.SHORT_DASH);
#End Year High

#Begin Year Low
plot yearlyLow = if(!isIntraDay, Double.NaN, Lowest(low(period = dayMinAggPrd), length = 365));
yearlyLow.SetDefaultColor(color = Color.LIGHT_GRAY);
yearlyLow.SetStyle(Curve.SHORT_DASH);
#End Year Low

def fifteenMinAggPrd = if(currentAggPrd > AggregationPeriod.FIFTEEN_MIN, currentAggPrd, AggregationPeriod.FIFTEEN_MIN);
#Begin Fifteen Minute Highs
plot fifteenMinHigh = Highest(high(period = fifteenMinAggPrd), length = 1);
fifteenMinHigh.SetDefaultColor(color = Color.LIGHT_GRAY);
fifteenMinHigh.SetStyle(Curve.SHORT_DASH);
fifteenMinHigh.SetPaintingStrategy(paintingStrategy = PaintingStrategy.HORIZONTAL);
fifteenMinHigh.setHiding(currentAggPrd > AggregationPeriod.FIFTEEN_MIN);
#End Fifteen Minute High

#Begin Fifteen Minute Low
plot fifteenMinLow = Lowest(low(period = fifteenMinAggPrd), length = 1);
fifteenMinLow.SetDefaultColor(color = Color.LIGHT_GRAY);
fifteenMinLow.SetStyle(Curve.SHORT_DASH);
fifteenMinLow.SetPaintingStrategy(paintingStrategy = PaintingStrategy.HORIZONTAL);
fifteenMinLow.setHiding(currentAggPrd > AggregationPeriod.FIFTEEN_MIN);
#End Fifteen Minute Low

def atrAggPeriod = if(!isIntraDay, GetAggregationPeriod(), dayMinAggPrd); 
#Begin ATR
def AvgTrueRng = MovingAverage(AverageType.WILDERS, TrueRange(high(period = atrAggPeriod)[1], close(period = atrAggPeriod)[1], low(period = atrAggPeriod)[1]), 14);
AddLabel(yes, "ATR: " + AvgTrueRng, color = Color.WHITE);
def DailyClose = close(period = atrAggPeriod)[1];

def highAtrLevel = if(IsNaN(close[-1]), if(!IsNaN(highAtrLevel[1]) and !IsNaN(close[10]), highAtrLevel[1], DailyClose + AvgTrueRng), Double.NaN);
plot HighATR = highAtrLevel;
HighATR.SetDefaultColor(color = Color.RED);
HighATR.SetStyle(Curve.SHORT_DASH);
HighATR.SetPaintingStrategy(paintingStrategy = PaintingStrategy.HORIZONTAL);

AddChartBubble(IsNaN(HighATR[11]) and !IsNaN(HighATR[10]), HighATR, "ATR High", color = Color.RED);

def lowAtrLevel = if(IsNaN(close[-1]), if(!IsNaN(lowAtrLevel[1]) and !IsNaN(close[10]), lowAtrLevel[1], DailyClose - AvgTrueRng), Double.NaN);
plot LowATR = lowAtrLevel;
LowATR.SetDefaultColor(color = Color.GREEN);
LowATR.SetStyle(Curve.SHORT_DASH);
LowATR.SetPaintingStrategy(paintingStrategy = PaintingStrategy.HORIZONTAL);

AddChartBubble(IsNaN(LowATR[11]) and !IsNaN(LowATR[10]), LowATR, "ATR Low", color = Color.GREEN, up = No);

#End ATR

#Begin 52 Week H/L
plot FiftyTwoWeekHigh = if(!isIntraDay, Double.NaN, Highest(high(period = dayMinAggPrd),252));
FiftyTwoWeekHigh.SetDefaultColor(color = Color.RED);
FiftyTwoWeekHigh.SetStyle(Curve.SHORT_DASH);

plot FiftyTwoWeekLow = if(!isIntraDay, Double.NaN, Lowest(low(period = dayMinAggPrd),252));
FiftyTwoWeekLow.SetDefaultColor(color = Color.GREEN);
FiftyTwoWeekLow.SetStyle(Curve.SHORT_DASH);

AddLabel(isIntraDay, "52Wk H/L = " + FiftyTwoWeekHigh + " / " + FiftyTwoWeekLow, Color.WHITE);
#End 52 Week H/L
