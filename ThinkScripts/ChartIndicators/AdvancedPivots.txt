#Advanced Pivots
#Author: TradeArcher2020
#Version: 0.4
#Date Created: 07/25/2021
#Description: This indicator is based on the MIC Pivots script. It simply adds the ability to base the pivot source line on the VWAP, Close, Open, HLOC4, HLOC+VWAP5 or HLC+VWAP4 from the previous day in addition to the HLC3 from the original script.

input aggregationPeriod = AggregationPeriod.DAY;
input showOnlyToday = no;
input PivotSource = {default "HLC3", "HLOC4", "VWAP", "Close", "Open", "HLOCVWAP5", "HLCVWAP4"};
def PH = high(period = aggregationPeriod)[1];
def PL = low(period = aggregationPeriod)[1];
def PC = close(period = aggregationPeriod)[1];
def PO = open(period = aggregationPeriod)[1];
def prevDaysVWAP = vwap(period = aggregationPeriod)[1];
def PS;
switch (PivotSource) {
    case "HLC3":
        PS = (PH + PL + PC) / 3;
    case "HLOC4":
        PS = (PH + PL + PC + PO) / 4;
    case "VWAP":
        PS = prevDaysVWAP;
    case "Close":
        PS = PC;
    case "Open":
        PS = PO;
    case "HLCVWAP4":
        PS = (PH + PL + PC + prevDaysVWAP) / 4;
    case "HLOCVWAP5":
        PS = (PH + PL + PC + PO + prevDaysVWAP) / 5;
}


def tmpPPP = PS;
def tmpRR1 = 2 * tmpPPP - PL;
def tmpRR2 = tmpPPP + (PH - PL);
def tmpRR3 = tmpPPP + (PH - 2 * PL);
def tmpRR4 = PH + 3 * (tmpPPP - PL);
def tmpSS1 = 2 * tmpPPP - PH;
def tmpSS2 = tmpPPP - (PH - PL);
def tmpSS3 = 2 * tmpPPP - (2 * PH - PL);
def tmpSS4 = PL - 3 * (PH - tmpPPP);

def PPP = if(!showOnlyToday, tmpPPP, if(!IsNaN(PC[-1]), Double.NaN, tmpPPP));
def RR1 = if(!showOnlyToday, tmpRR1, if(!IsNaN(PC[-1]), Double.NaN, tmpRR1));
def RR2 = if(!showOnlyToday, tmpRR2, if(!IsNaN(PC[-1]), Double.NaN, tmpRR2));
def RR3 = if(!showOnlyToday, tmpRR3, if(!IsNaN(PC[-1]), Double.NaN, tmpRR3));
def RR4 = if(!showOnlyToday, tmpRR4, if(!IsNaN(PC[-1]), Double.NaN, tmpRR4));
def SS1 = if(!showOnlyToday, tmpSS1, if(!IsNaN(PC[-1]), Double.NaN, tmpSS1));
def SS2 = if(!showOnlyToday, tmpSS2, if(!IsNaN(PC[-1]), Double.NaN, tmpSS2));
def SS3 = if(!showOnlyToday, tmpSS3, if(!IsNaN(PC[-1]), Double.NaN, tmpSS3));
def SS4 = if(!showOnlyToday, tmpSS4, if(!IsNaN(PC[-1]), Double.NaN, tmpSS4));

plot R4 = if(!showOnlyToday, RR4, HighestAll(RR4));
plot R3 = if(!showOnlyToday, RR3, HighestAll(RR3));
plot R2 = if(!showOnlyToday, RR2, HighestAll(RR2));
plot R1 = if(!showOnlyToday, RR1, HighestAll(RR1));
plot PP = if(!showOnlyToday, PPP, HighestAll(PPP));
plot S1 = if(!showOnlyToday, SS1, HighestAll(SS1));
plot S2 = if(!showOnlyToday, SS2, HighestAll(SS2));
plot S3 = if(!showOnlyToday, SS3, HighestAll(SS3));
plot S4 = if(!showOnlyToday, SS4, HighestAll(SS4));


DefineGlobalColor("Resistance", Color.DARK_RED);
DefineGlobalColor("Neutral", Color.LIGHT_GRAY);
DefineGlobalColor("Support", Color.DARK_GREEN);
R4.SetDefaultColor(GlobalColor("Resistance"));
R3.SetDefaultColor(GlobalColor("Resistance"));
R2.SetDefaultColor(GlobalColor("Resistance"));
R1.SetDefaultColor(GlobalColor("Resistance"));
PP.SetDefaultColor(GlobalColor("Neutral"));
S1.SetDefaultColor(GlobalColor("Support"));
S2.SetDefaultColor(GlobalColor("Support"));
S3.SetDefaultColor(GlobalColor("Support"));
S4.SetDefaultColor(GlobalColor("Support"));

R4.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
R3.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
R2.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
R1.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
PP.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
S1.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
S2.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
S3.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
S4.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);

R4.SetStyle(Curve.MEDIUM_DASH);
R3.SetStyle(Curve.MEDIUM_DASH);
R2.SetStyle(Curve.MEDIUM_DASH);
R1.SetStyle(Curve.MEDIUM_DASH);
PP.SetStyle(Curve.MEDIUM_DASH);
S1.SetStyle(Curve.MEDIUM_DASH);
S2.SetStyle(Curve.MEDIUM_DASH);
S3.SetStyle(Curve.MEDIUM_DASH);
S4.SetStyle(Curve.MEDIUM_DASH);

R4.SetLineWeight(2);
R3.SetLineWeight(2);
R2.SetLineWeight(2);
R1.SetLineWeight(2);
PP.SetLineWeight(2);
S1.SetLineWeight(2);
S2.SetLineWeight(2);
S3.SetLineWeight(2);
S4.SetLineWeight(2);
