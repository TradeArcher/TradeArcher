#Advanced VWAP Lines Chart Indicator
#Author: TradeArcher2020
#Version: 0.6
#Date Created: 12/07/2020

input LineCalculation = {default Fibonacci, StandardDeviation, StandardError};
input UpperLowerCalculation = {default HighLow, ATR};
input NumberOfFibonacciLines = {one, two, three, four, five, default six};
input HideYesterday = no;
input HideTwoDaysAgo = no;
input HideThreeDaysAgo = yes;
input HideFourDaysAgo = yes;
input HideWeek = yes;
input HideLastWeek = yes;
input HideMonth = yes;
input HideLastMonth = yes;
input HideQuarter = yes;
input HideLastQuarter = yes;

input ATRLength = 14;

input FibExt1 = 0.236;
input FibExt2 = 0.382;
input FibExt3 = 0.5;
input FibExt4 = 0.618;
input FibExt5 = 0.786;
input FibExt6 = 1.0;

input UseCandleBodyForHL = yes;

def lineCount;

switch (NumberOfFibonacciLines) {
case one:
    lineCount = 1;
case two:
    lineCount = 2;
case three:
    lineCount = 3;
case four:
    lineCount = 4;
case five:
    lineCount = 5;
case six:
    lineCount = 6;
}

def currentAggPeriod = GetAggregationPeriod();
def aggPeriodType = 
if currentAggPeriod >= AggregationPeriod.YEAR 
then AggregationPeriod.YEAR 
else 
    if currentAggPeriod >= AggregationPeriod.QUARTER   
    then AggregationPeriod.YEAR
    else 
    if currentAggPeriod >= AggregationPeriod.MONTH  
    then AggregationPeriod.QUARTER 
    else 
    if currentAggPeriod >= AggregationPeriod.WEEK 
    then AggregationPeriod.MONTH
    else 
    if currentAggPeriod >= AggregationPeriod.DAY  
    then AggregationPeriod.WEEK 
    else  AggregationPeriod.DAY;

#def cumulativePeriod = BarNumber();

#def typicalPrice = (high + low + close) / 3;
#def typicalPriceVolume = typicalPrice * volume;

#def cumulativeTypicalPriceVolume = fold typicalPriceVolumeIx = 0 to cumulativePeriod with typicalPriceVolumeTotal = 0 do typicalPriceVolumeTotal + getValue(typicalPriceVolume, typicalPriceVolumeIx);
#def cumulativeVolume = fold volumeIx = 0 to cumulativePeriod with volumeTotal = 0 do volumeTotal + getValue(volume, volumeIx);
#plot linReg = cumulativeTypicalPriceVolume / cumulativeVolume;

#linReg.SetDefaultColor(color = Color.BLUE);

#BEGIN VWAP code
input timeFrame = {default DAY, WEEK, MONTH};

def cap = GetAggregationPeriod();
def errorInAggregation =
    timeFrame == timeFrame.DAY and cap >= AggregationPeriod.WEEK or
    timeFrame == timeFrame.WEEK and cap >= AggregationPeriod.MONTH;
Assert(!errorInAggregation, "timeFrame should be not less than current chart aggregation period");

def highOfTimeFrame;
def lowOfTimeFrame;
def yyyyMmDd = GetYYYYMMDD();
def periodIndx;
switch (timeFrame) {
case DAY:
    periodIndx = yyyyMmDd;
    highOfTimeFrame = high(period = AggregationPeriod.DAY);
    lowOfTimeFrame = low(period = AggregationPeriod.DAY);
case WEEK:
    periodIndx = Floor((DaysFromDate(First(yyyyMmDd)) + GetDayOfWeek(First(yyyyMmDd))) / 7);
    highOfTimeFrame = high(period = AggregationPeriod.WEEK);
    lowOfTimeFrame = low(period = AggregationPeriod.WEEK);
case MONTH:
    periodIndx = RoundDown(yyyyMmDd / 100, 0);
    highOfTimeFrame = high(period = AggregationPeriod.MONTH);
    lowOfTimeFrame = low(period = AggregationPeriod.MONTH);
}
def isPeriodRolled = CompoundValue(1, periodIndx != periodIndx[1], yes);

def volumeSum;
def volumeVwapSum;
def volumeVwap2Sum;

if (isPeriodRolled) {
    volumeSum = volume;
    volumeVwapSum = volume * vwap;
    volumeVwap2Sum = volume * Sqr(vwap);
} else {
    volumeSum = CompoundValue(1, volumeSum[1] + volume, volume);
    volumeVwapSum = CompoundValue(1, volumeVwapSum[1] + volume * vwap, volume * vwap);
    volumeVwap2Sum = CompoundValue(1, volumeVwap2Sum[1] + volume * Sqr(vwap), volume * Sqr(vwap));
}
def price = volumeVwapSum / volumeSum;

#TODO: Add input options to anchor VWAP to Date/Time, HOD, LOD, HODLODGreaterVolume, RecentHigh, RecentLow, RecentVolumeSpike
#def price = TotalSum(if postAnchorDate and postAnchorTime then ((high+low+close)/3)*(volume) else 0)/TotalSum(if postAnchorDate and postAnchorTime then volume else 0);
#def price = TotalSum(((high+low+close)/3)*(volume))/TotalSum(volume);

#plot customVWAPLine = customVWAP;
#customVWAPLine.SetStyle(Curve.FIRM);
#customVWAPLine.SetLineWeight(3);
#customVWAPLine.SetDefaultColor(Color.GREEN);

input volumeLength = 20;
input volumeLineWeight2 = 33;
input volumeLineWeight3 = 50;
input volumeLineWeight4 = 75;
input volumeLineWeight5 = 100;

#Get moving average of volume
def volAvg = MovingAverage(length = volumeLength, data = volume);
#Calculate middle of bar
#calculate default 33, 50, 75 and 100 percent volume increase levels
def volLevel2IncLevel = volAvg * (1 + (volumeLineWeight2 / 100));
def volLevel3IncLevel = volAvg * (1 + (volumeLineWeight3 / 100));
def volLevel4IncLevel = volAvg * (1 + (volumeLineWeight4 / 100));
def volLevel5IncLevel = volAvg * (1 + (volumeLineWeight5 / 100));


#plot VWAP = price;
plot linReg = price;

#Use volume increase levels to change VWAP line color 
linReg.AssignValueColor(color = (if volume >= volLevel5IncLevel then Color.RED else if volume >= volLevel4IncLevel then Color.ORANGE else if volume >= volLevel3IncLevel then Color.LIGHT_ORANGE else if volume >= volLevel2IncLevel then Color.YELLOW else Color.BLUE));
linReg.SetStyle(Curve.FIRM);
linReg.SetLineWeight(2);
#linReg.SetLineWeight((if volume >= volLevel5IncLevel then 5 else if volume >= volLevel4IncLevel then 4 else if volume >= volLevel3IncLevel then 3 else if volume >= volLevel2IncLevel then 2 else 1));
#END VWAP code

def highValue = If(UseCandleBodyForHL, If(close > open, close, open), high);
def lowValue = If(UseCandleBodyForHL, If(open < close, open, close), low);

def sd;
switch (LineCalculation) {
case StandardDeviation:
    sd = StDevAll(data = price);
case StandardError:
    sd = StErrAll(data = price);
default:
    sd = 1;
}

#TODO: use a fold to calculate then True RangeBands according to these rules:
#The Average True Range (ATR) study calculates the average true price range over a time period. True range is the greatest of the following:

# * the difference between the current high and the current low
# * the difference between the current high and the previous close
# * the difference between the previous close and the current low

#By default, the average true range is a 14-period Wilder's moving average of this value; both the period and the type of moving average can be customized using the study input parameters.

#def atrValue = MovingAverage(aggPeriodType, TrueRange(high(period = aggPeriodType)[1], close(period = aggPeriodType)[1], low(period = aggPeriodType)[1]), ATRLength) / 2;
#def atrValue = TrueRange(high(period = aggPeriodType)[1], close(period = aggPeriodType)[1], low(period = aggPeriodType)[1]);

def h = high(period = aggPeriodType);
def l = low(period = aggPeriodType);
def c = close(period = aggPeriodType);
def trueRange = TrueRange(h, c, l);

def avgTrueRange = (fold atrIndex = 0 to ATRLength with sumOfTrueRanges = 0 do sumOfTrueRanges + GetValue(trueRange, atrIndex)) / ATRLength;

#def atrValue = MovingAverage(ATRAverageType, GetValue(trueRange, "dynamic offset" = 1), ATRLength);

#AddLabel(yes, "hv: " + highValue + " | lv: " + lowValue);

#AddLabel(yes, "atrValue: " + avgTrueRange);

def highOfPeriod = highOfTimeFrame;#HighestAll(highValue);
def lowOfPeriod = lowOfTimeFrame;#LowestAll(lowValue);

#def upperFibWidth = (highOfPeriod - linReg);
#def lowerFibWidth = (linReg - lowofPeriod);
def upperFibWidth;
def lowerFibWidth;

switch (UpperLowerCalculation) {
case ATR:
    upperFibWidth = avgTrueRange / 2;
    lowerFibWidth = avgTrueRange / 2;
default:
    upperFibWidth = (highOfPeriod - lowOfPeriod) / 2;
    lowerFibWidth = (highOfPeriod - lowOfPeriod) / 2;
}

input PrevDayVWAPLevel = {default EOD, MarketClose};

def isWithinTradingHours = If (cap >= AggregationPeriod.DAY, yes, RegularTradingStart(GetYYYYMMDD()) < GetTime() and  RegularTradingEnd(GetYYYYMMDD()) > GetTime());
def lastCandle = (isWithinTradingHours[0] and !isWithinTradingHours[-1]);

plot lineRegFib1Up = linReg + upperFibWidth * sd * FibExt1;
lineRegFib1Up.SetDefaultColor(color = Color.DARK_ORANGE);

plot lineRegFib1Down = linReg - lowerFibWidth * sd * FibExt1;
lineRegFib1Down.SetDefaultColor(color = Color.DARK_ORANGE);

plot lineRegFib2Up = linReg + upperFibWidth * sd * FibExt2;
lineRegFib2Up.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up.SetHiding(lineCount < 2);

plot lineRegFib2Down = linReg - lowerFibWidth * sd * FibExt2;
lineRegFib2Down.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down.SetHiding(lineCount < 2);

plot lineRegFib3Up = linReg + upperFibWidth * sd * FibExt3;
lineRegFib3Up.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up.SetHiding(lineCount < 3);

plot lineRegFib3Down = linReg - lowerFibWidth * sd * FibExt3;
lineRegFib3Down.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down.SetHiding(lineCount < 3);

plot lineRegFib4Up = linReg + upperFibWidth * sd * FibExt4;
lineRegFib4Up.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up.SetHiding(lineCount < 4);

plot lineRegFib4Down = linReg - lowerFibWidth * sd * FibExt4;
lineRegFib4Down.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down.SetHiding(lineCount < 4);

plot lineRegFib5Up = linReg + upperFibWidth * sd * FibExt5;
lineRegFib5Up.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up.SetHiding(lineCount < 5);

plot lineRegFib5Down = linReg - lowerFibWidth * sd * FibExt5;
lineRegFib5Down.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down.SetHiding(lineCount < 5);

plot lineRegFib6Up = linReg + upperFibWidth * sd * FibExt6;
lineRegFib6Up.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up.SetHiding(lineCount < 6);

plot lineRegFib6Down = linReg - lowerFibWidth * sd * FibExt6;
lineRegFib6Down.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down.SetHiding(lineCount < 6);

def dailyVWAP = vwap(period = AggregationPeriod.DAY);

def weeklyVWAP = vwap(period = AggregationPeriod.WEEK);
def monthlyVWAP = vwap(period = AggregationPeriod.MONTH);
def quarterlyVWAP = vwap(period = AggregationPeriod.QUARTER);


#VWAP Levels at end of prevous day
def vwapAtEndOfPrevDay = dailyVWAP[1];


plot vwapAtEndOfPrevDayLine = vwapAtEndOfPrevDay;
vwapAtEndOfPrevDayLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOfPrevDayLine.SetStyle(Curve.LONG_DASH );
vwapAtEndOfPrevDayLine.SetHiding(HideYesterday);

plot lineRegFib1UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt1;
lineRegFib1UpPrevDay.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib1UpPrevDay.SetHiding(HideYesterday);

plot lineRegFib1DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt1;
lineRegFib1DownPrevDay.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib1DownPrevDay.SetHiding(HideYesterday);

plot lineRegFib2UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt2;
lineRegFib2UpPrevDay.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib2UpPrevDay.SetHiding(lineCount < 2 or HideYesterday);

plot lineRegFib2DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt2;
lineRegFib2DownPrevDay.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib2DownPrevDay.SetHiding(lineCount < 2 or HideYesterday);

plot lineRegFib3UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt3;
lineRegFib3UpPrevDay.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib3UpPrevDay.SetHiding(lineCount < 3 or HideYesterday);

plot lineRegFib3DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt3;
lineRegFib3DownPrevDay.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib3DownPrevDay.SetHiding(lineCount < 3 or HideYesterday);

plot lineRegFib4UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt4;
lineRegFib4UpPrevDay.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib4UpPrevDay.SetHiding(lineCount < 4 or HideYesterday);

plot lineRegFib4DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt4;
lineRegFib4DownPrevDay.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib4DownPrevDay.SetHiding(lineCount < 4 or HideYesterday);

plot lineRegFib5UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt5;
lineRegFib5UpPrevDay.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib5UpPrevDay.SetHiding(lineCount < 5 or HideYesterday);

plot lineRegFib5DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt5;
lineRegFib5DownPrevDay.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib5DownPrevDay.SetHiding(lineCount < 5 or HideYesterday);

plot lineRegFib6UpPrevDay = vwapAtEndOfPrevDay + upperFibWidth * sd * FibExt6;
lineRegFib6UpPrevDay.SetDefaultColor(color = Color.VIOLET);
lineRegFib6UpPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib6UpPrevDay.SetHiding(lineCount < 6 or HideYesterday);

plot lineRegFib6DownPrevDay = vwapAtEndOfPrevDay - lowerFibWidth * sd * FibExt6;
lineRegFib6DownPrevDay.SetDefaultColor(color = Color.VIOLET);
lineRegFib6DownPrevDay.SetStyle(Curve.LONG_DASH );
lineRegFib6DownPrevDay.SetHiding(lineCount < 6 or HideYesterday);




#VWAP Levels at end of 2 days ago
def vwapAtEndOf2DaysAgo = dailyVWAP[2];

plot vwapAtEndOf2DaysAgoLine = vwapAtEndOf2DaysAgo;
vwapAtEndOf2DaysAgoLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOf2DaysAgoLine.SetStyle(Curve.MEDIUM_DASH );
vwapAtEndOf2DaysAgoLine.SetHiding(HideTwoDaysAgo);

plot lineRegFib1Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt1;
lineRegFib1Up2DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib1Up2DaysAgo.SetHiding(HideTwoDaysAgo);

plot lineRegFib1Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt1;
lineRegFib1Down2DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib1Down2DaysAgo.SetHiding(HideTwoDaysAgo);

plot lineRegFib2Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt2;
lineRegFib2Up2DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib2Up2DaysAgo.SetHiding(lineCount < 2 or HideTwoDaysAgo);

plot lineRegFib2Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt2;
lineRegFib2Down2DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib2Down2DaysAgo.SetHiding(lineCount < 2 or HideTwoDaysAgo);

plot lineRegFib3Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt3;
lineRegFib3Up2DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib3Up2DaysAgo.SetHiding(lineCount < 3 or HideTwoDaysAgo);

plot lineRegFib3Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt3;
lineRegFib3Down2DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib3Down2DaysAgo.SetHiding(lineCount < 3 or HideTwoDaysAgo);

plot lineRegFib4Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt4;
lineRegFib4Up2DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib4Up2DaysAgo.SetHiding(lineCount < 4 or HideTwoDaysAgo);

plot lineRegFib4Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt4;
lineRegFib4Down2DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib4Down2DaysAgo.SetHiding(lineCount < 4 or HideTwoDaysAgo);

plot lineRegFib5Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt5;
lineRegFib5Up2DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib5Up2DaysAgo.SetHiding(lineCount < 5 or HideTwoDaysAgo);

plot lineRegFib5Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt5;
lineRegFib5Down2DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib5Down2DaysAgo.SetHiding(lineCount < 5 or HideTwoDaysAgo);

plot lineRegFib6Up2DaysAgo = vwapAtEndOf2DaysAgo + upperFibWidth * sd * FibExt6;
lineRegFib6Up2DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib6Up2DaysAgo.SetHiding(lineCount < 6 or HideTwoDaysAgo);

plot lineRegFib6Down2DaysAgo = vwapAtEndOf2DaysAgo - lowerFibWidth * sd * FibExt6;
lineRegFib6Down2DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down2DaysAgo.SetStyle(Curve.MEDIUM_DASH );
lineRegFib6Down2DaysAgo.SetHiding(lineCount < 6 or HideTwoDaysAgo);




#VWAP Levels at end of 3 days ago
def vwapAtEndOf3DaysAgo = dailyVWAP[3];

plot vwapAtEndOf3DaysAgoLine = vwapAtEndOf3DaysAgo;
vwapAtEndOf3DaysAgoLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOf3DaysAgoLine.SetStyle(Curve.SHORT_DASH );
vwapAtEndOf3DaysAgoLine.SetHiding(HideThreeDaysAgo);

plot lineRegFib1Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt1;
lineRegFib1Up3DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib1Up3DaysAgo.SetHiding(HideThreeDaysAgo);

plot lineRegFib1Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt1;
lineRegFib1Down3DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib1Down3DaysAgo.SetHiding(HideThreeDaysAgo);

plot lineRegFib2Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt2;
lineRegFib2Up3DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib2Up3DaysAgo.SetHiding(lineCount < 2 or HideThreeDaysAgo);

plot lineRegFib2Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt2;
lineRegFib2Down3DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib2Down3DaysAgo.SetHiding(lineCount < 2 or HideThreeDaysAgo);

plot lineRegFib3Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt3;
lineRegFib3Up3DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib3Up3DaysAgo.SetHiding(lineCount < 3 or HideThreeDaysAgo);

plot lineRegFib3Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt3;
lineRegFib3Down3DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib3Down3DaysAgo.SetHiding(lineCount < 3 or HideThreeDaysAgo);

plot lineRegFib4Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt4;
lineRegFib4Up3DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib4Up3DaysAgo.SetHiding(lineCount < 4 or HideThreeDaysAgo);

plot lineRegFib4Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt4;
lineRegFib4Down3DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib4Down3DaysAgo.SetHiding(lineCount < 4 or HideThreeDaysAgo);

plot lineRegFib5Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt5;
lineRegFib5Up3DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib5Up3DaysAgo.SetHiding(lineCount < 5 or HideThreeDaysAgo);

plot lineRegFib5Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt5;
lineRegFib5Down3DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib5Down3DaysAgo.SetHiding(lineCount < 5 or HideThreeDaysAgo);

plot lineRegFib6Up3DaysAgo = vwapAtEndOf3DaysAgo + upperFibWidth * sd * FibExt6;
lineRegFib6Up3DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib6Up3DaysAgo.SetHiding(lineCount < 6 or HideThreeDaysAgo);

plot lineRegFib6Down3DaysAgo = vwapAtEndOf3DaysAgo - lowerFibWidth * sd * FibExt6;
lineRegFib6Down3DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down3DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib6Down3DaysAgo.SetHiding(lineCount < 6 or HideThreeDaysAgo);


#VWAP Levels at end of 4 days ago
def vwapAtEndOf4DaysAgo = dailyVWAP[4];

plot vwapAtEndOf4DaysAgoLine = vwapAtEndOf4DaysAgo;
vwapAtEndOf4DaysAgoLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOf4DaysAgoLine.SetStyle(Curve.SHORT_DASH );
vwapAtEndOf4DaysAgoLine.SetHiding(HideFourDaysAgo);

plot lineRegFib1Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt1;
lineRegFib1Up4DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib1Up4DaysAgo.SetHiding(HideFourDaysAgo);

plot lineRegFib1Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt1;
lineRegFib1Down4DaysAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib1Down4DaysAgo.SetHiding(HideFourDaysAgo);

plot lineRegFib2Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt2;
lineRegFib2Up4DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib2Up4DaysAgo.SetHiding(lineCount < 2 or HideFourDaysAgo);

plot lineRegFib2Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt2;
lineRegFib2Down4DaysAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib2Down4DaysAgo.SetHiding(lineCount < 2 or HideFourDaysAgo);

plot lineRegFib3Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt3;
lineRegFib3Up4DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib3Up4DaysAgo.SetHiding(lineCount < 3 or HideFourDaysAgo);

plot lineRegFib3Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt3;
lineRegFib3Down4DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib3Down4DaysAgo.SetHiding(lineCount < 3 or HideFourDaysAgo);

plot lineRegFib4Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt4;
lineRegFib4Up4DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib4Up4DaysAgo.SetHiding(lineCount < 4 or HideFourDaysAgo);

plot lineRegFib4Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt4;
lineRegFib4Down4DaysAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib4Down4DaysAgo.SetHiding(lineCount < 4 or HideFourDaysAgo);

plot lineRegFib5Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt5;
lineRegFib5Up4DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib5Up4DaysAgo.SetHiding(lineCount < 5 or HideFourDaysAgo);

plot lineRegFib5Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt5;
lineRegFib5Down4DaysAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib5Down4DaysAgo.SetHiding(lineCount < 5 or HideFourDaysAgo);

plot lineRegFib6Up4DaysAgo = vwapAtEndOf4DaysAgo + upperFibWidth * sd * FibExt6;
lineRegFib6Up4DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib6Up4DaysAgo.SetHiding(lineCount < 6 or HideFourDaysAgo);

plot lineRegFib6Down4DaysAgo = vwapAtEndOf4DaysAgo - lowerFibWidth * sd * FibExt6;
lineRegFib6Down4DaysAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down4DaysAgo.SetStyle(Curve.SHORT_DASH );
lineRegFib6Down4DaysAgo.SetHiding(lineCount < 6 or HideFourDaysAgo);



#VWAP Levels for this week
def vwapForThisWeek = weeklyVWAP[0];

plot vwapForThisWeekLine = vwapForThisWeek;
vwapForThisWeekLine.SetDefaultColor(color = Color.BLUE);
vwapForThisWeekLine.SetStyle(Curve.LONG_DASH );
vwapForThisWeekLine.SetHiding(HideWeek);

plot lineRegFib1UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt1;
lineRegFib1UpForThisWeek.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib1UpForThisWeek.SetHiding(HideWeek);

plot lineRegFib1DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt1;
lineRegFib1DownForThisWeek.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib1DownForThisWeek.SetHiding(HideWeek);

plot lineRegFib2UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt2;
lineRegFib2UpForThisWeek.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib2UpForThisWeek.SetHiding(lineCount < 2 or HideWeek);

plot lineRegFib2DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt2;
lineRegFib2DownForThisWeek.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib2DownForThisWeek.SetHiding(lineCount < 2 or HideWeek);

plot lineRegFib3UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt3;
lineRegFib3UpForThisWeek.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib3UpForThisWeek.SetHiding(lineCount < 3 or HideWeek);

plot lineRegFib3DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt3;
lineRegFib3DownForThisWeek.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib3DownForThisWeek.SetHiding(lineCount < 3 or HideWeek);

plot lineRegFib4UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt4;
lineRegFib4UpForThisWeek.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib4UpForThisWeek.SetHiding(lineCount < 4 or HideWeek);

plot lineRegFib4DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt4;
lineRegFib4DownForThisWeek.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib4DownForThisWeek.SetHiding(lineCount < 4 or HideWeek);

plot lineRegFib5UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt5;
lineRegFib5UpForThisWeek.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib5UpForThisWeek.SetHiding(lineCount < 5 or HideWeek);

plot lineRegFib5DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt5;
lineRegFib5DownForThisWeek.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib5DownForThisWeek.SetHiding(lineCount < 5 or HideWeek);

plot lineRegFib6UpForThisWeek = vwapForThisWeek + upperFibWidth * sd * FibExt6;
lineRegFib6UpForThisWeek.SetDefaultColor(color = Color.VIOLET);
lineRegFib6UpForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib6UpForThisWeek.SetHiding(lineCount < 6 or HideWeek);

plot lineRegFib6DownForThisWeek = vwapForThisWeek - lowerFibWidth * sd * FibExt6;
lineRegFib6DownForThisWeek.SetDefaultColor(color = Color.VIOLET);
lineRegFib6DownForThisWeek.SetStyle(Curve.LONG_DASH );
lineRegFib6DownForThisWeek.SetHiding(lineCount < 6 or HideWeek);



#VWAP Levels at end of 1 week ago
def vwapAtEndOfLastWeek = weeklyVWAP[1];

plot vwapAtEndOfLastWeekLine = vwapAtEndOfLastWeek;
vwapAtEndOfLastWeekLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOfLastWeekLine.SetStyle(Curve.LONG_DASH );
vwapAtEndOfLastWeekLine.SetHiding(HideLastWeek);

plot lineRegFib1Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt1;
lineRegFib1Up1WeekAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Up1WeekAgo.SetHiding(HideLastWeek);

plot lineRegFib1Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt1;
lineRegFib1Down1WeekAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Down1WeekAgo.SetHiding(HideLastWeek);

plot lineRegFib2Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt2;
lineRegFib2Up1WeekAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Up1WeekAgo.SetHiding(lineCount < 2 or HideLastWeek);

plot lineRegFib2Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt2;
lineRegFib2Down1WeekAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Down1WeekAgo.SetHiding(lineCount < 2 or HideLastWeek);

plot lineRegFib3Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt3;
lineRegFib3Up1WeekAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Up1WeekAgo.SetHiding(lineCount < 3 or HideLastWeek);

plot lineRegFib3Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt3;
lineRegFib3Down1WeekAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Down1WeekAgo.SetHiding(lineCount < 3 or HideLastWeek);

plot lineRegFib4Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt4;
lineRegFib4Up1WeekAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Up1WeekAgo.SetHiding(lineCount < 4 or HideLastWeek);

plot lineRegFib4Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt4;
lineRegFib4Down1WeekAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Down1WeekAgo.SetHiding(lineCount < 4 or HideLastWeek);

plot lineRegFib5Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt5;
lineRegFib5Up1WeekAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Up1WeekAgo.SetHiding(lineCount < 5 or HideLastWeek);

plot lineRegFib5Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt5;
lineRegFib5Down1WeekAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Down1WeekAgo.SetHiding(lineCount < 5 or HideLastWeek);

plot lineRegFib6Up1WeekAgo = vwapAtEndOfLastWeek + upperFibWidth * sd * FibExt6;
lineRegFib6Up1WeekAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Up1WeekAgo.SetHiding(lineCount < 6 or HideLastWeek);

plot lineRegFib6Down1WeekAgo = vwapAtEndOfLastWeek - lowerFibWidth * sd * FibExt6;
lineRegFib6Down1WeekAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down1WeekAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Down1WeekAgo.SetHiding(lineCount < 6 or HideLastWeek);



#VWAP Levels for this month
def vwapForThisMonth = monthlyVWAP[0];

plot vwapForThisMonthLine = vwapForThisMonth;
vwapForThisMonthLine.SetDefaultColor(color = Color.BLUE);
vwapForThisMonthLine.SetStyle(Curve.LONG_DASH );
vwapForThisMonthLine.SetHiding(HideMonth);

plot lineRegFib1UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt1;
lineRegFib1UpForThisMonth.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib1UpForThisMonth.SetHiding(HideMonth);

plot lineRegFib1DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt1;
lineRegFib1DownForThisMonth.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib1DownForThisMonth.SetHiding(HideMonth);

plot lineRegFib2UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt2;
lineRegFib2UpForThisMonth.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib2UpForThisMonth.SetHiding(lineCount < 2 or HideMonth);

plot lineRegFib2DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt2;
lineRegFib2DownForThisMonth.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib2DownForThisMonth.SetHiding(lineCount < 2 or HideMonth);

plot lineRegFib3UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt3;
lineRegFib3UpForThisMonth.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib3UpForThisMonth.SetHiding(lineCount < 3 or HideMonth);

plot lineRegFib3DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt3;
lineRegFib3DownForThisMonth.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib3DownForThisMonth.SetHiding(lineCount < 3 or HideMonth);

plot lineRegFib4UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt4;
lineRegFib4UpForThisMonth.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib4UpForThisMonth.SetHiding(lineCount < 4 or HideMonth);

plot lineRegFib4DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt4;
lineRegFib4DownForThisMonth.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib4DownForThisMonth.SetHiding(lineCount < 4 or HideMonth);

plot lineRegFib5UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt5;
lineRegFib5UpForThisMonth.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib5UpForThisMonth.SetHiding(lineCount < 5 or HideMonth);

plot lineRegFib5DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt5;
lineRegFib5DownForThisMonth.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib5DownForThisMonth.SetHiding(lineCount < 5 or HideMonth);

plot lineRegFib6UpForThisMonth = vwapForThisMonth + upperFibWidth * sd * FibExt6;
lineRegFib6UpForThisMonth.SetDefaultColor(color = Color.VIOLET);
lineRegFib6UpForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib6UpForThisMonth.SetHiding(lineCount < 6 or HideMonth);

plot lineRegFib6DownForThisMonth = vwapForThisMonth - lowerFibWidth * sd * FibExt6;
lineRegFib6DownForThisMonth.SetDefaultColor(color = Color.VIOLET);
lineRegFib6DownForThisMonth.SetStyle(Curve.LONG_DASH );
lineRegFib6DownForThisMonth.SetHiding(lineCount < 6 or HideMonth);



#VWAP Levels at end of 1 month ago
def vwapAtEndOfLastMonth = monthlyVWAP[1];

plot vwapAtEndOfLastMonthLine = vwapAtEndOfLastMonth;
vwapAtEndOfLastMonthLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOfLastMonthLine.SetStyle(Curve.LONG_DASH );
vwapAtEndOfLastMonthLine.SetHiding(HideLastMonth);

plot lineRegFib1Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt1;
lineRegFib1Up1MonthAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Up1MonthAgo.SetHiding(HideLastMonth);

plot lineRegFib1Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt1;
lineRegFib1Down1MonthAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Down1MonthAgo.SetHiding(HideLastMonth);

plot lineRegFib2Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt2;
lineRegFib2Up1MonthAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Up1MonthAgo.SetHiding(lineCount < 2 or HideLastMonth);

plot lineRegFib2Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt2;
lineRegFib2Down1MonthAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Down1MonthAgo.SetHiding(lineCount < 2 or HideLastMonth);

plot lineRegFib3Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt3;
lineRegFib3Up1MonthAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Up1MonthAgo.SetHiding(lineCount < 3 or HideLastMonth);

plot lineRegFib3Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt3;
lineRegFib3Down1MonthAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Down1MonthAgo.SetHiding(lineCount < 3 or HideLastMonth);

plot lineRegFib4Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt4;
lineRegFib4Up1MonthAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Up1MonthAgo.SetHiding(lineCount < 4 or HideLastMonth);

plot lineRegFib4Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt4;
lineRegFib4Down1MonthAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Down1MonthAgo.SetHiding(lineCount < 4 or HideLastMonth);

plot lineRegFib5Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt5;
lineRegFib5Up1MonthAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Up1MonthAgo.SetHiding(lineCount < 5 or HideLastMonth);

plot lineRegFib5Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt5;
lineRegFib5Down1MonthAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Down1MonthAgo.SetHiding(lineCount < 5 or HideLastMonth);

plot lineRegFib6Up1MonthAgo = vwapAtEndOfLastMonth + upperFibWidth * sd * FibExt6;
lineRegFib6Up1MonthAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Up1MonthAgo.SetHiding(lineCount < 6 or HideLastMonth);

plot lineRegFib6Down1MonthAgo = vwapAtEndOfLastMonth - lowerFibWidth * sd * FibExt6;
lineRegFib6Down1MonthAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down1MonthAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Down1MonthAgo.SetHiding(lineCount < 6 or HideLastMonth);




#VWAP Levels for this quarter
def vwapForThisQuarter = quarterlyVWAP[0];

plot vwapForThisQuarterLine = vwapForThisQuarter;
vwapForThisQuarterLine.SetDefaultColor(color = Color.BLUE);
vwapForThisQuarterLine.SetStyle(Curve.LONG_DASH );
vwapForThisQuarterLine.SetHiding(HideQuarter);

plot lineRegFib1UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt1;
lineRegFib1UpForThisQuarter.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib1UpForThisQuarter.SetHiding(HideQuarter);

plot lineRegFib1DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt1;
lineRegFib1DownForThisQuarter.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib1DownForThisQuarter.SetHiding(HideQuarter);

plot lineRegFib2UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt2;
lineRegFib2UpForThisQuarter.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib2UpForThisQuarter.SetHiding(lineCount < 2 or HideQuarter);

plot lineRegFib2DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt2;
lineRegFib2DownForThisQuarter.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib2DownForThisQuarter.SetHiding(lineCount < 2 or HideQuarter);

plot lineRegFib3UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt3;
lineRegFib3UpForThisQuarter.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib3UpForThisQuarter.SetHiding(lineCount < 3 or HideQuarter);

plot lineRegFib3DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt3;
lineRegFib3DownForThisQuarter.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib3DownForThisQuarter.SetHiding(lineCount < 3 or HideQuarter);

plot lineRegFib4UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt4;
lineRegFib4UpForThisQuarter.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib4UpForThisQuarter.SetHiding(lineCount < 4 or HideQuarter);

plot lineRegFib4DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt4;
lineRegFib4DownForThisQuarter.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib4DownForThisQuarter.SetHiding(lineCount < 4 or HideQuarter);

plot lineRegFib5UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt5;
lineRegFib5UpForThisQuarter.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib5UpForThisQuarter.SetHiding(lineCount < 5 or HideQuarter);

plot lineRegFib5DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt5;
lineRegFib5DownForThisQuarter.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib5DownForThisQuarter.SetHiding(lineCount < 5 or HideQuarter);

plot lineRegFib6UpForThisQuarter = vwapForThisQuarter + upperFibWidth * sd * FibExt6;
lineRegFib6UpForThisQuarter.SetDefaultColor(color = Color.VIOLET);
lineRegFib6UpForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib6UpForThisQuarter.SetHiding(lineCount < 6 or HideQuarter);

plot lineRegFib6DownForThisQuarter = vwapForThisQuarter - lowerFibWidth * sd * FibExt6;
lineRegFib6DownForThisQuarter.SetDefaultColor(color = Color.VIOLET);
lineRegFib6DownForThisQuarter.SetStyle(Curve.LONG_DASH );
lineRegFib6DownForThisQuarter.SetHiding(lineCount < 6 or HideQuarter);



#VWAP Levels at end of 1 quarter ago
def vwapAtEndOfLastQuarter = quarterlyVWAP[1];

plot vwapAtEndOfLastQuarterLine = vwapAtEndOfLastQuarter;
vwapAtEndOfLastQuarterLine.SetDefaultColor(color = Color.BLUE);
vwapAtEndOfLastQuarterLine.SetStyle(Curve.LONG_DASH );
vwapAtEndOfLastQuarterLine.SetHiding(HideLastQuarter);

plot lineRegFib1Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt1;
lineRegFib1Up1QuarterAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Up1QuarterAgo.SetHiding(HideLastQuarter);

plot lineRegFib1Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt1;
lineRegFib1Down1QuarterAgo.SetDefaultColor(color = Color.DARK_ORANGE);
lineRegFib1Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib1Down1QuarterAgo.SetHiding(HideLastQuarter);

plot lineRegFib2Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt2;
lineRegFib2Up1QuarterAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Up1QuarterAgo.SetHiding(lineCount < 2 or HideLastQuarter);

plot lineRegFib2Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt2;
lineRegFib2Down1QuarterAgo.SetDefaultColor(color = Color.DARK_RED);
lineRegFib2Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib2Down1QuarterAgo.SetHiding(lineCount < 2 or HideLastQuarter);

plot lineRegFib3Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt3;
lineRegFib3Up1QuarterAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Up1QuarterAgo.SetHiding(lineCount < 3 or HideLastQuarter);

plot lineRegFib3Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt3;
lineRegFib3Down1QuarterAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib3Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib3Down1QuarterAgo.SetHiding(lineCount < 3 or HideLastQuarter);

plot lineRegFib4Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt4;
lineRegFib4Up1QuarterAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Up1QuarterAgo.SetHiding(lineCount < 4 or HideLastQuarter);

plot lineRegFib4Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt4;
lineRegFib4Down1QuarterAgo.SetDefaultColor(color = Color.LIGHT_ORANGE);
lineRegFib4Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib4Down1QuarterAgo.SetHiding(lineCount < 4 or HideLastQuarter);

plot lineRegFib5Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt5;
lineRegFib5Up1QuarterAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Up1QuarterAgo.SetHiding(lineCount < 5 or HideLastQuarter);

plot lineRegFib5Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt5;
lineRegFib5Down1QuarterAgo.SetDefaultColor(color = Color.LIGHT_RED);
lineRegFib5Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib5Down1QuarterAgo.SetHiding(lineCount < 5 or HideLastQuarter);

plot lineRegFib6Up1QuarterAgo = vwapAtEndOfLastQuarter + upperFibWidth * sd * FibExt6;
lineRegFib6Up1QuarterAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Up1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Up1QuarterAgo.SetHiding(lineCount < 6 or HideLastQuarter);

plot lineRegFib6Down1QuarterAgo = vwapAtEndOfLastQuarter - lowerFibWidth * sd * FibExt6;
lineRegFib6Down1QuarterAgo.SetDefaultColor(color = Color.VIOLET);
lineRegFib6Down1QuarterAgo.SetStyle(Curve.LONG_DASH );
lineRegFib6Down1QuarterAgo.SetHiding(lineCount < 6 or HideLastQuarter);

