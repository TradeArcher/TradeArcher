// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradeArcher.Core.Models;

namespace TradeArcher.Core.Data.Migrations
{
    [DbContext(typeof(TradeArcherDataContext))]
    partial class TradeArcherDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("TradeArcher.Core.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrokerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrokerId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("AccountId");

                    b.HasIndex("BrokerId");

                    b.HasIndex("BrokerId1");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TradeArcher.Core.Models.Broker", b =>
                {
                    b.Property<int>("BrokerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("BrokerId");

                    b.ToTable("Brokers");

                    b.HasData(
                        new
                        {
                            BrokerId = 1,
                            Name = "TD Ameritrade"
                        },
                        new
                        {
                            BrokerId = 2,
                            Name = "ThinkOrSwim"
                        });
                });

            modelBuilder.Entity("TradeArcher.Core.Models.Trade", b =>
                {
                    b.Property<int>("TradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<double>("NetPrice")
                        .HasColumnType("REAL");

                    b.Property<int>("OrderSide")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PosEffect")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<int>("Spread")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Strike")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<int>("TradeType")
                        .HasColumnType("INTEGER");

                    b.HasKey("TradeId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountId1");

                    b.ToTable("TradeHistory");
                });

            modelBuilder.Entity("TradeArcher.Core.Models.Account", b =>
                {
                    b.HasOne("TradeArcher.Core.Models.Broker", null)
                        .WithMany("Accounts")
                        .HasForeignKey("BrokerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TradeArcher.Core.Models.Broker", "Broker")
                        .WithMany()
                        .HasForeignKey("BrokerId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TradeArcher.Core.Models.Trade", b =>
                {
                    b.HasOne("TradeArcher.Core.Models.Account", null)
                        .WithMany("Trades")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TradeArcher.Core.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
